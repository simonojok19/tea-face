description = "Face Verification Sample"

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

def productRootDir = "../"
def productBinDir = new File(productRootDir, "Bin")
def productBinAndroidDir = new File(productBinDir, "Android")
def productLibAndroidDir = new File(productRootDir, "Lib/Android")
def archUsed = "arm64-v8a,armeabi-v7a,x86"

def usedNdfList = ["FaceVerification.ndf",
					"FaceVerificationIcao.ndf"]

def nativeLibsUsed = ["libjnidispatch.so",
				  		"libNFaceVerificationClient.so",
				  		"libopenblas.so"]

buildscript {
	ext {
		kotlin_version = '1.4.21'
	}
	System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
	repositories {
		google()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:4.1.1'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.2"
	}
}

android {
	compileSdkVersion 30

	dexOptions {
		javaMaxHeapSize "4g"
	}

	defaultConfig {
		minSdkVersion 26
		targetSdkVersion 30

		ndk {
			abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a'
		}
	}
	splits {
		abi {
			enable true
			reset()
			include 'arm64-v8a'
			universalApk true
		}
	}
	packagingOptions {
		exclude "META-INF/LE-832C0.RSA"
		exclude "com/sun/jna/**/libjnidispatch.*"
		exclude "com/sun/jna/**/jnidispatch.*"
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}
	lintOptions {
		abortOnError false
	}

	buildFeatures {
		dataBinding true
	}
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:deprecation"
	}
}

task deleteTemporaryFiles(type: Delete) {
	for (String file : usedNdfList) {
		delete "${android.sourceSets.main.assets.srcDirs[0]}/data/${file}.jet"
	}
	delete "${android.sourceSets.main.jniLibs.srcDirs[0]}"
}

clean {
	logger.info(productBinAndroidDir.toString())
	delete fileTree(dir: productBinAndroidDir , include: "${"face-verification-sample"}*.*")
}

task prepareNdfFiles(type: Copy) {
	from "${productBinDir}/Data"
	includes = usedNdfList
	rename { String fileName ->
		fileName.replace('.ndf', '.ndf.jet')
	}
	into "${android.sourceSets.main.assets.srcDirs[0]}/data"
}

int counter = 1
archUsed.split(',').each {
	String srcDir = "${productLibAndroidDir}/${it}"
	String dstDir = "${android.sourceSets.main.jniLibs.srcDirs[0]}/${it}"
	task "prepareNativeLibs$counter"(type: Copy) {
		from srcDir
		for (String lib : nativeLibsUsed) {
			include lib
		}
		into dstDir
		dependsOn(prepareNdfFiles)
	}
	tasks.preBuild.dependsOn("prepareNativeLibs$counter")
	counter++
}

task publishApk(type: Copy) {
	from "${project.buildDir}/outputs/apk/debug"
	include "${project.archivesBaseName}-*-debug.apk"
	rename "${project.archivesBaseName}-universal-debug.apk", "${project.archivesBaseName}.apk"
	into productBinAndroidDir
}

clean.dependsOn(deleteTemporaryFiles)
prepareNdfFiles.dependsOn(clean)
build.finalizedBy(publishApk)

dependencies {
	implementation 'androidx.appcompat:appcompat:1.2.0'
	implementation 'com.google.android.material:material:1.2.1'
	implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
	implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
	implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	implementation 'androidx.legacy:legacy-support-v4:1.0.0'
	implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
	implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
	implementation 'com.android.volley:volley:1.1.1'
	testImplementation 'junit:junit:4.13.1'
	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

	implementation "androidx.room:room-runtime:2.2.6"
	kapt "androidx.room:room-compiler:2.2.6"
	implementation "androidx.room:room-ktx:2.2.6"



	implementation ":neurotec-face-verification-client-android"
	implementation ":jna"
	implementation ":face-verification-rest-client"

	api 'io.swagger:swagger-annotations:1.5.18'
	api 'com.squareup.okhttp:okhttp:2.7.5'
	api 'com.squareup.okhttp:logging-interceptor:2.7.5'
	api 'com.google.code.gson:gson:2.8.6'
	api 'io.gsonfire:gson-fire:1.8.0'
	api 'org.threeten:threetenbp:1.3.5'

}

repositories {
	mavenLocal()
	google()
	jcenter()
	mavenCentral()
	flatDir {
		dirs "${productBinAndroidDir}/"
	}
}